/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.RESTService.ErrorHandling;
using System;
using System.Net;
using System.Web.Http.Controllers;
using System.Web.Http.ModelBinding;

namespace OutSystems.RESTService.Binders {

    public class AbstractParamBinder : IModelBinder {

        public virtual bool BindModel(HttpActionContext actionContext, ModelBindingContext bindingContext) {
            return BindModelForType(actionContext, bindingContext, null);
        }

        protected virtual bool BindModelForType(HttpActionContext actionContext, ModelBindingContext bindingContext, Type forType) {
            var value = bindingContext.ValueProvider.GetValue(bindingContext.ModelName);
            if (value != null) {
                try {
                    bindingContext.Model = forType == null ? value.AttemptedValue : value.ConvertTo(forType);
                    return true;
                } catch {
                    OnError(bindingContext.ModelName);
                }
            }

            return false;
        }

        protected virtual string GetParamTypeName() {
            return "";
        }

        protected virtual void OnError(string param) {
            throw new ExposeRestException(GetErrorMessage(param), HttpStatusCode.BadRequest);
        }

        protected string GetErrorMessage(string param) {
            return string.Format("Failed to parse. '{0}' compatible data type is required for parameter '{1}'.",
                GetParamTypeName(),
                param
            );
        }
    }
}