/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.RuntimePlatform.Processes {
    /// <summary>
    /// Represents the Activity Kind Identifiers in the database
    /// </summary>
    public enum ActivityKind {
        Start = 1,
        End = 2,
        Decision = 3,
        AutomaticActivity = 4,
        ExecuteProcess = 6,
        WaitActivity = 7,
        HumanActivity = 8,
        ConditionalStart = 9,
        EmailActivity = 10,
    }

    public static class ActivityKindUtils {
        
        public static bool CanBeStarted(this ActivityKind kind) {
            return kind == ActivityKind.ConditionalStart;
}

        public static bool CanBeOpened(this ActivityKind kind) {
            return kind == ActivityKind.HumanActivity;
        }

        public static bool CanBeClosed(this ActivityKind kind) {
            switch (kind) {
                case ActivityKind.WaitActivity:
                case ActivityKind.HumanActivity:
                case ActivityKind.ConditionalStart:
                    return true;
                default:
                    return false;
            }
        }

        public static bool IsListener(this ActivityKind kind) {
            return kind == ActivityKind.ConditionalStart;
        }

        public static bool IsTerminal(this ActivityKind kind) {
            return kind == ActivityKind.End;
        }

        public static bool CanExecuteAsNextActivity(this ActivityKind kind) {
            return (kind != ActivityKind.AutomaticActivity) && (kind != ActivityKind.EmailActivity);
        }

        public static int KindOrderNum(this ActivityKind kind) {
            switch (kind) {
                case ActivityKind.ConditionalStart:
                    return 1;
                case ActivityKind.HumanActivity:
                    return 2;
                case ActivityKind.Decision:
                    return 3;
                case ActivityKind.ExecuteProcess:
                    return 4;
                case ActivityKind.WaitActivity:
                    return 5;
                case ActivityKind.Start:
                case ActivityKind.End:
                    return 6;
                case ActivityKind.AutomaticActivity:
                case ActivityKind.EmailActivity:
                    return 7;
                default:
                    throw new InvalidOperationException("There's a case missing in this switch");
            }
        }
    }
}
