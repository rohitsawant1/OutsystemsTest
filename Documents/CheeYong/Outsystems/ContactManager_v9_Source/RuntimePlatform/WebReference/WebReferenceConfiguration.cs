/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;

namespace OutSystems.HubEdition.RuntimePlatform.WebReference {
    public class WebReferenceConfiguration {
        
        private WebReferenceConfiguration(string url, bool traceErrors, bool traceAll, string certificateFile) {
            Url = url;
            TraceAll = traceAll;
            TraceErrors = traceErrors;
            Trace = traceAll || traceErrors;
            CertificateFile = certificateFile;
        }

        public string Url { get; set; }
        public bool TraceAll { get; set; }
        public bool TraceErrors { get; set; }
        public bool Trace { get; set; }
        public string CertificateFile { get; set; }

        /// <summary>
        /// Return a previously defined SOAP API Configuration, based on its Service Studio key and eSpace Id.
        /// </summary>
        /// <param name="webrefSSKey">The Service Studio key of the SOAP API source.</param>
        /// <param name="eSpaceId">The eSpace Id.</param>
        /// <param name="eSpaceKey">The eSpace Key.</param>
        /// <returns>The corresponding WebReferenceConfiguration.</returns>
        public static WebReferenceConfiguration GetCustomClientConfiguration(string webrefSSKey, int eSpaceId, string eSpaceKey) {
            const string pluginName = "SOAPConsume";
            
            var url = RuntimePlatformSettings.Plugin.GetSetting<string>(pluginName, eSpaceKey, webrefSSKey, "Url", string.Empty).GetValue();
            var traceErrors = RuntimePlatformSettings.Plugin.GetSetting<bool>(pluginName, eSpaceKey, webrefSSKey, "TraceErrors", false).GetValue();
            var traceAll = RuntimePlatformSettings.Plugin.GetSetting<bool>(pluginName, eSpaceKey, webrefSSKey, "TraceAll", false).GetValue();
            var certificateFile = RuntimePlatformSettings.Plugin.GetSetting<string>(pluginName, eSpaceKey, webrefSSKey, "CertificateFile", string.Empty).GetValue();
            return new WebReferenceConfiguration(url, traceErrors, traceAll, certificateFile);
        }
    }
}