/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.Logging.LogDefinition;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.RuntimePlatform.Log {
    
    [Serializable]
    public class WebReferenceLog {
        private WebReferenceLogDefinition log;

        public DateTime Instant {
            get {
                return log.Instant;
            }
            set {
                log.Instant = value;
            }
        }

        public int Duration {
            get {
                return log.Duration;
            }
            set {
                log.Duration = value;
            }
        }

        public string URL {
            get {
                return log.URL;
            }
            set {
                log.URL = value;
            }
        }

        public string Method {
            get {
                return log.Method;
            }
            set {
                log.Method = value;
            }
        }

        public int EspaceId {
            get {
                return log.EspaceId;
            }
            set {
                log.EspaceId = value;
            }
        }

        public int TenantId {
            get {
                return log.TenantId;
            }
            set {
                log.TenantId = value;
            }
        }

        public string Executed_By {
            get {
                return log.Executed_By;
            }
            set {
                log.Executed_By = value;
            }
        }

        public string ErrorId {
            get {
                return log.ErrorId;
            }
            set {
                log.ErrorId = value;
            }
        }

        public string IntegrationLogId {
            get {
                return log.IntegrationLogId;
            }
            set {
                log.IntegrationLogId = value;
            }
        }


        public WebReferenceLog() {
            log = new WebReferenceLogDefinition();
        }


        public WebReferenceLog(DateTime instant, int duration, string url, string method, int espaceId, int tenantId, string executed_by,
                                string errorId, string integrationLogId) {
            log = new WebReferenceLogDefinition();

            Instant = instant;
            Duration = duration;
            URL = url;
            Method = method;
            EspaceId = espaceId;
            TenantId = tenantId;
            Executed_By = executed_by;
            ErrorId = errorId;
            IntegrationLogId = integrationLogId;
        }

        public WebReferenceLog(DateTime instant, int duration, string url, string method, int espaceId, int tenantId, string executed_by, string errorId) {
            log = new WebReferenceLogDefinition();

            Instant = instant;
            Duration = duration;
            URL = url;
            Method = method;
            EspaceId = espaceId;
            TenantId = tenantId;
            Executed_By = executed_by;
            ErrorId = errorId;
            IntegrationLogId = string.Empty;
        }

        public WebReferenceLog(WebReferenceLog obj) {
            log = new WebReferenceLogDefinition();

            Instant = obj.Instant;
            Duration = obj.Duration;
            URL = obj.URL;
            Method = obj.Method;
            EspaceId = obj.EspaceId;
            TenantId = obj.TenantId;
            Executed_By = obj.Executed_By;
            ErrorId = obj.ErrorId;
            IntegrationLogId = obj.IntegrationLogId;
        }

        public object Clone() {
            return new WebReferenceLog(this);
        }


        public static void StaticWrite(DateTime instant, int duration, string url, string method, int espaceId,
            int tenantId, string executed_by, string errorId) {
            StaticWrite(instant, duration, url, method, espaceId, tenantId, executed_by, errorId, string.Empty);
        }


        public static void StaticWrite(DateTime instant, int duration, string url, string method, int espaceId, int tenantId,
            string executed_by, string errorId, string integrationLogId) {
            WebReferenceLog log = new WebReferenceLog();
            log.Write(instant, duration, url, method, espaceId, tenantId, executed_by, errorId, integrationLogId);
        }

        public void Write(DateTime instant, int duration, string url, string method, int espaceId, int tenantId, string executed_by,
            string errorId, string integrationLogId) {
            Instant = instant;
            Duration = duration;
            URL = url;
            Method = method;
            EspaceId = espaceId;
            TenantId = tenantId;
            Executed_By = executed_by;
            ErrorId = errorId;
            IntegrationLogId = integrationLogId;

            Write();
        }

        public void Write(DateTime instant, int duration, string url, string method, int espaceId, int tenantId, string executed_by,
            string errorId) {
            Write(instant, duration, url, method, espaceId, tenantId, executed_by, errorId, string.Empty);
        }

        public void Write() {
            log.Write();
        }
    }
}
