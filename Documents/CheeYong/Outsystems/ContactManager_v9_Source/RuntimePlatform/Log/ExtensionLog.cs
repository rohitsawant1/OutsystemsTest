/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.Logging.LogDefinition;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.RuntimePlatform.Log {

    [Serializable]
    public class ExtensionLog {
        private ExtensionLogDefinition log;

        public DateTime Instant {
            get {
                return log.Instant;
            } set {
                log.Instant = value;
            }
        }

        public int Duration {
            get {
                return log.Duration;
            }
            set {
                log.Duration = value;
            }
        }

        public string Action_Name {
            get {
                return log.Action_Name;
            }
            set {
                log.Action_Name = value;
            }
        }

        public string SessionId {
            get {
                return log.SessionId;
            }
            set {
                log.SessionId = value;
            }
        }

        public int UserId {
            get {
                return log.UserId;
            }
            set {
                log.UserId = value;
            }
        }
        public int EspaceId {
            get {
                return log.EspaceId;
            }
            set {
                log.EspaceId = value;
            }
        }

        public int TenantId {
            get {
                return log.TenantId;
            }
            set {
                log.TenantId = value;
            }
        }

        public int Extension_Id {
            get {
                return log.Extension_Id;
            }
            set {
                log.Extension_Id = value;
            }
        }

        public string ExecutedBy {
            get {
                return log.ExecutedBy;
            }
            set {
                log.ExecutedBy = value;
            }
        }

        public string ErrorId {
            get {
                return log.ErrorId;
            }
            set {
                log.ErrorId = value;
            }
        }

        public string RequestKey {
            get {
                return log.RequestKey;
            }
            set {
                log.RequestKey = value;
            }
        }

        public string EspaceName {
            get {
                return log.EspaceName;
            }
            set {
                log.EspaceName = value;
            }
        }

        public string ExtensionName {
            get {
                return log.ExtensionName;
            }
            set {
                log.ExtensionName = value;
            }
        }

        public string ApplicationName {
            get {
                return log.ApplicationName;
            }
            set {
                log.ApplicationName = value;
            }
        }

        public ObjectKey ApplicationKey {
            get {
                return log.ApplicationKey;
            }
            set {
                log.ApplicationKey = value;
            }
        }

        public string Username {
            get {
                return log.Username;
            }
            set {
                log.Username = value;
            }
        }

        public const int MAX_ACTION_NAME_SIZE = ExtensionLogDefinition.MAX_ACTION_NAME_SIZE;
        public const int MAX_SESSION_ID_SIZE = ExtensionLogDefinition.MAX_SESSION_ID_SIZE;
        public const int MAX_EXECUTED_BY_SIZE = ExtensionLogDefinition.MAX_EXECUTED_BY_SIZE;
        public const int MAX_ERROR_ID_SIZE = ExtensionLogDefinition.MAX_ERROR_ID_SIZE;


        public ExtensionLog() {
            log = new ExtensionLogDefinition();
        }

        public ExtensionLog(ExtensionLog obj) {
            log = new ExtensionLogDefinition(obj.Instant, obj.Duration, obj.Action_Name, obj.SessionId, obj.UserId,
            obj.EspaceId, obj.TenantId, obj.Extension_Id, obj.ExecutedBy, obj.ErrorId, obj.RequestKey,
            obj.EspaceName, obj.ExtensionName, obj.ApplicationName, obj.ApplicationKey, obj.Username);
        }

        public object Clone() {
            return new ExtensionLog(this);
        }

        public void Write(IAppInfo appInfo, ISessionInfo sessionInfo, DateTime instant, int duration, string action_name, int extensionId, string extensionName, string errorId) {

            string requestKey = RequestKey;
            RequestTracer reqTracer = RuntimePlatformUtils.GetRequestTracer();
            if (reqTracer != null) {
                requestKey = reqTracer.RequestKey;
            }

            log.Write(instant, duration, action_name, sessionInfo.SessionID, appInfo.eSpaceId, appInfo.TenantId, sessionInfo.UserId, extensionId, RuntimeEnvironment.MachineName, errorId, requestKey,
                appInfo.eSpaceName, extensionName, appInfo.ApplicationName, appInfo.ApplicationUIDAsKey, sessionInfo.UserName);
        }

        public static void StaticWrite(IAppInfo appInfo, ISessionInfo sessionInfo, DateTime instant, int duration, string action_name, string errorId, int extensionId, string extensionName) {
            ExtensionLog log = new ExtensionLog();
            log.Write(appInfo, sessionInfo, instant, duration, action_name, extensionId, extensionName, errorId);
        }
    }
}
