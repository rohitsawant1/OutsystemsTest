/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.Logging.LogDefinition;

namespace OutSystems.HubEdition.RuntimePlatform.Log {
    
    [Serializable]
    public class WebServiceLog {
        private WebServiceLogDefinition log;

        public DateTime Instant {
            get {
                return log.Instant;
            } set {
                log.Instant = value;
            }
        }

        public int Duration {
            get {
                return log.Duration;
            }
            set {
                log.Duration = value;
            }
        }

        public string Name {
            get {
                return log.Name;
            }
            set {
                log.Name = value;
            }
        }

        public string Method {
            get {
                return log.Method;
            }
            set {
                log.Method = value;
            }
        }

        public int EspaceId {
            get {
                return log.EspaceId;
            }
            set {
                log.EspaceId = value;
            }
        }

        public int TenantId {
            get {
                return log.TenantId;
            }
            set {
                log.TenantId = value;
            }
        }

        public string Client_IP {
            get {
                return log.Client_IP;
            }
            set {
                log.Client_IP = value;
            }
        }

        public string ExecutedBy {
            get {
                return log.ExecutedBy;
            }
            set {
                log.ExecutedBy = value;
            }
        }

        public string ErrorId {
            get {
                return log.ErrorId;
            }
            set {
                log.ErrorId = value;
            }
        }

        public WebServiceLog() {
            log = new WebServiceLogDefinition();
        }

        public WebServiceLog(DateTime instant, int duration, string name, string method, int espaceId, int tenantId, string client_ip, string executedBy, string errorId) {
            log = new WebServiceLogDefinition();

            Instant = instant;
            Duration = duration;
            Name = name;
            Method = method;
            EspaceId = espaceId;
            TenantId = tenantId;
            Client_IP = client_ip;
            ExecutedBy = executedBy;
            ErrorId = errorId;
        }

        public WebServiceLog(WebServiceLog obj) {
            log = new WebServiceLogDefinition();

            Instant = obj.Instant;
            Duration = obj.Duration;
            Name = obj.Name;
            Method = obj.Method;
            EspaceId = obj.EspaceId;
            TenantId = obj.TenantId;
            Client_IP = obj.Client_IP;
            ExecutedBy = obj.ExecutedBy;
            ErrorId = obj.ErrorId;
        }

        public object Clone() {
            return new WebServiceLog(this);
        }
        public void Write(DateTime instant, int duration, string name, string method, int espaceId, int tenantId, string client_ip,
            string executedBy, string errorId) {
            Instant = instant;
            Duration = duration;
            Name = name;
            Method = method;
            EspaceId = espaceId;
            TenantId = tenantId;
            Client_IP = client_ip;
            ExecutedBy = executedBy;
            ErrorId = errorId;

            log.Write();
        }

        public static void StaticWrite(DateTime instant, int duration, string name, string method, int espaceId, int tenantId,
            string client_ip, string executedBy, string errorId) {
            WebServiceLog log = new WebServiceLog();
            log.Write(instant, duration, name, method, espaceId, tenantId, client_ip, executedBy, errorId);
        }

    }
}
