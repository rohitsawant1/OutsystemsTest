/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OutSystems.HubEdition.RuntimePlatform.Cache {

    /// <summary>
    /// Thread save cache with clear method.
    /// </summary>
    /// <typeparam name="underlyingtype"></typeparam>
    internal class CacheWithClear<underlyingtype> {

        private volatile object cache = null;
        private Object lockobject = new Object();
        Func<underlyingtype> initialization;

        public CacheWithClear(Func<underlyingtype> initialization) {
            this.initialization = initialization;
        }

        public void Clear() {
            lock (lockobject) {
                cache = null;
            }
        }

        public underlyingtype GetValue() {
            object result = cache;
            if (result != null) {
                return (underlyingtype)result;
            }

            lock (lockobject) {
                if (cache == null) {
                    cache = initialization();
                }
                return (underlyingtype)cache;
            }
        }
    }
}
