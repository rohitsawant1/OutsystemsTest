/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Web;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.Internal.Db;
using OutSystems.Logging;
using OutSystems.Logging.LogDefinition;

namespace OutSystems.HubEdition.RuntimePlatform {
    public class Visits {
        public static void CreatVisitLog(HttpRequest request) {
            SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
            if (RuntimePlatformUtils.IsValidRequestForVisit()
                && request.Cookies["osVisitor"] != null
                && request.Cookies["osVisit"] != null
                && session["osIsNewVisit"] != null && ((bool)session["osIsNewVisit"])) {

                var visitLog = new CustomLogDefinition("Visit", "OSSYS_VISIT", 0, null,
                    DatabaseAccess.ForSystemDatabase.DatabaseServices.DatabaseConfiguration.DatabaseIdentifier);

                visitLog.Fields.Add("INSTANT", new CustomLogDefinition.CustomLogFieldDefinition(DateTime.Now, false, false));
                visitLog.Fields.Add("VISITORUID", new CustomLogDefinition.CustomLogFieldDefinition(request.Cookies["osVisitor"].Value, false, false));
                visitLog.Fields.Add("VISITUID", new CustomLogDefinition.CustomLogFieldDefinition(request.Cookies["osVisit"].Value, false, false));

                RuntimeLogger.Log(visitLog);
                session["osIsNewVisit"] = false;
            }
        }
    }
}
