/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.RuntimePlatform {

    public class JavaScript {

        public class ExcludedApp {

            private string _appName;
            private string _appKey;

            public ExcludedApp(string key, string name) {
                _appKey = key;
                _appName = name;
            }

            public string Key {
                get { return _appKey; }
            }

            public string Name {
                get { return _appName; }
            }
        }

        public class ExcludedEspace {

            private string _eSpaceName;
            private string _eSpaceKey;

            public ExcludedEspace(string key, string name) {
                _eSpaceKey = key;
                _eSpaceName = name;
            }

            public string Key {
                get { return _eSpaceKey; }
            }

            public string Name {
                get { return _eSpaceName; }
            }
        }

        private int _id, _order;
        private string _name, _scriptOrUrl, _description, _includeAt;
        private bool _isActive;
        private List<ExcludedApp> _appExclusionList = new List<ExcludedApp>();
        private List<ExcludedEspace> _eSpaceExclusionList = new List<ExcludedEspace>();

        public JavaScript() {
            _id = 0;
            _name = "";
            _scriptOrUrl = "";
            _order = 0;
            _description = "";
            _isActive = false;
            _includeAt = "";
        }

        public JavaScript(int id, string name, string scriptOrUrl, string locationId, int order, string description, bool isActive) {
            _id = id;
            _name = name;
            _scriptOrUrl = scriptOrUrl;
            _order = order;
            _description = description;
            _isActive = isActive;
            _includeAt = locationId;
        }

        public void AddAppExclusion(string key, string name) {
            _appExclusionList.Add(new ExcludedApp(key, name));
        }

        public void AddEspaceExclusion(string key, string name) {
            _eSpaceExclusionList.Add(new ExcludedEspace(key, name));
        }

        public IEnumerable<ExcludedApp> AppExclusions {
            get {
                return _appExclusionList;
            }
        }

        public IEnumerable<ExcludedEspace> EspaceExclusions {
            get {
                return _eSpaceExclusionList;
            }
        }

        public int Id {
            get { return _id; }
            set { _id = value; }
        }

        public string Name {
            get { return _name; }
            set { _name = value;  }
        }

        public string ScriptOrUrl {
            get { return _scriptOrUrl; }
            set { _scriptOrUrl = value; }
        }

        public string IncludeAt {
            get { return _includeAt; }
            set { _includeAt = value; }
        }

        public string Description {
            get { return _description; }
            set { _description = value; }
        }

        public int Order {
            get { return _order; }
            set { _order = value; }
        }

        public bool IsActive {
            get { return _isActive; }
            set { _isActive = value; }
        }

        public static JavaScript CreateFromReader(IDataReader reader) {
            string scriptOrUrl = reader.SafeGet<string>("URL");
            if (scriptOrUrl.Trim().IsNullOrEmpty()) {
                scriptOrUrl = reader.SafeGet<string>("SCRIPT");
            }
            return new JavaScript(
                reader.SafeGet<int>("ID"),
                reader.SafeGet<string>("CALLBACKNAME"),
                scriptOrUrl,
                reader.SafeGet<string>("LOCATION"),
                reader.SafeGet<int>("ORDER"),
                reader.SafeGet<string>("DESCRIPTION"),
                reader.SafeGet<bool>("ISACTIVE"));
        }
        
    }

 

}
