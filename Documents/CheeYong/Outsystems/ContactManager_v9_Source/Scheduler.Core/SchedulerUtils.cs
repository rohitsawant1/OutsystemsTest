/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Log;

namespace OutSystems.Scheduler.Core {
    public class SchedulerUtils {

        internal const string SchedulerConsumerKey = "462bf1b0-92f9-4f0e-abca-7850433f3380";

        private static void WriteEventError(string message, Exception exception, string instanceKey = null) {
            message = (instanceKey != null ? "[" + instanceKey + "] " : "") + message;
            var eventLogMessage = exception == null ? message : message + Environment.NewLine + exception.ToString();

            EventLogger.WriteError(eventLogMessage);
            OSTrace.Error(message, exception);
        }

        public static void LogError(string message, Exception exception, string instanceKey = null, bool logToEventViewer = false) {
            // The detached scheduler has the RuntimeLogger set to the NullLogger, thus it will never write any errors.
            WriteEventError(message, exception, instanceKey);

        }
    }
}
