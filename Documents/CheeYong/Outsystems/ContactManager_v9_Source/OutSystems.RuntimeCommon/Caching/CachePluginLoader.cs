/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using OutSystems.RuntimeCommon.PubSub;
using OutSystems.RuntimeCommon.Settings;

namespace OutSystems.RuntimeCommon.Caching {
    public static class CachePluginLoader {
        public static ICache LoadCacheImplementation(string cacheClassName, ISettingsProvider settingsProvider, PubSubJobsExecutor executor = null) {
            Type pubSubType = null;
            if (!cacheClassName.IsNullOrEmpty()) {
                pubSubType = Type.GetType(cacheClassName);
            }
            if (executor != null) {
                return (ICache)pubSubType?
                    .GetConstructor(new Type[] {
                        typeof(ISettingsProvider),
                        typeof(PubSubJobsExecutor)
                    })
                    .Invoke(new object[]{
                        settingsProvider,
                        executor
                    });
            } else {
                return (ICache)pubSubType?
                    .GetConstructor(new Type[] {
                        typeof(ISettingsProvider)
                    })
                    .Invoke(new object[]{
                        settingsProvider
                    });
            }
            
        }
    }
}
