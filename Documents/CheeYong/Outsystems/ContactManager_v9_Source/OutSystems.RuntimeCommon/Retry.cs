/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace OutSystems.RuntimeCommon {
    public static class Retry {

        public const int DefaultDelayBetweenRetriesMs = 1000;
        public const int DefaultMaxRetries = 3;
        
        public static void DoWithRetries(Action actionToExecute, int maxRetries = DefaultMaxRetries, int delayBetweenRetriesMs = DefaultDelayBetweenRetriesMs, Action<int, Exception> logException = null) {
            DoWithRetries<object>(() => {
                actionToExecute();
                return null;
            }, maxRetries, delayBetweenRetriesMs, logException);
        }

        public static T DoWithRetries<T>(Func<T> functionToExecute, int maxRetries = DefaultMaxRetries, int delayBetweenRetriesMs = DefaultDelayBetweenRetriesMs, Action<int, Exception> logException = null) {
            if (logException == null) {
                logException = (i, e) => { };
            }
            if (maxRetries < 1) {
                throw new Exception("Please specify a valid number of retries.");
            }
            for (int i = 0; i < maxRetries; i++) {
                try {
                    return functionToExecute();
                } catch (Exception e) {
                    logException(i, e);
                    if (i == maxRetries - 1) {
                        throw;
                    }
                    Thread.Sleep(delayBetweenRetriesMs);
                }
            }
            return default(T);
        }
    }
}
