/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Configuration;
using System;

namespace OutSystems.RuntimeCommon
{

    public class Labeling
    {

        private const string defaultCompanyName = "OutSystems";
        private const string defaultHelpBaseURL = "http://www.outsystems.com";
        private const string defaultCompanyBaseURL = "http://www.outsystems.com";
        private const bool defaultOutSystemsInternalFeatures = true;
        private const string defaultPlatformName = "OutSystems";

        private static string _companyName = string.Empty;
        private static string _platformName = string.Empty;
        private static string _helpBaseURL = string.Empty;
        private static bool? _outSystemsInternalFeatures = null;
        private static bool? _allowSilentNotifications = null;
        private static string _submitFeedbackPromptMessage = string.Empty;
        private static string _submitFeedbackResponseMessage = string.Empty;
        private static string _submitFeedbackWSURL = string.Empty;
        private static string _companyTabColour = string.Empty;
        private static string _devOpsToolsImagesPath = string.Empty;
        private static string _devOpsGeneralErrorInformation = string.Empty;
        private static string _supportEmailAddress = string.Empty;
        private static string _companyBaseURL = string.Empty;

        
        static Labeling()
        {
            _companyName = LabelingResources.CompanyName;
            _platformName = LabelingResources.PlatformName;
            _helpBaseURL = LabelingResources.HelpBaseURL;
            _devOpsToolsImagesPath = LabelingResources.DevOpsToolsImagesPath;
            _companyBaseURL = LabelingResources.CompanyBaseURL;
            try
            {
                _outSystemsInternalFeatures = Convert.ToBoolean(LabelingResources.OutSystemsInternalFeatures);
            }
            catch (FormatException)
            {
                _outSystemsInternalFeatures = true;
            }
            try
            {
                _allowSilentNotifications = Convert.ToBoolean(LabelingResources.AllowSilentNotifications);
            }
            catch (FormatException)
            {
                _allowSilentNotifications = true;
            }
            _submitFeedbackPromptMessage = LabelingResources.SubmitFeedbackPromptMessage;
            _submitFeedbackResponseMessage = LabelingResources.SubmitFeedbackResponseMessage;
            _submitFeedbackWSURL = LabelingResources.SubmitFeedbackWSURL;
            _companyTabColour = LabelingResources.CompanyTabColour;
            _devOpsGeneralErrorInformation = LabelingResources.DevOpsGeneralErrorInformation;
            _supportEmailAddress = LabelingResources.SupportEmailAddress;
        }

        public static string CompanyName
        {
            get
            {
                return _companyName;
            }
        }

        public static string PlatformName
        {
            get
            {
                return _platformName;
            }
        }

        public static string HelpBaseURL
        {
            get
            {
                return _helpBaseURL;
            }
        }

        public static string CompanyBaseURL {
            get
            {
                return _companyBaseURL;
            }
        }

        public static bool OutSystemsInternalFeatures
        {
            get
            {
                return _outSystemsInternalFeatures.Value;
            }
        }

        public static bool AllowSilentNotifications
        {
            get
            {
                return _allowSilentNotifications.Value;
            }
        }

        public static string SubmitFeedbackPromptMessage
        {
            get
            {
                return _submitFeedbackPromptMessage;
            }
        }

        public static string SubmitFeedbackResponseMessage
        {
            get
            {
                return _submitFeedbackResponseMessage;
            }
        }

        public static string SubmitFeedbackWSURL
        {
            get
            {
                return _submitFeedbackWSURL;
            }
        }

        public static string CompanyTabColour
        {
            get
            {
                return _companyTabColour;
            }
        }

        public static string DevOpsToolsImagesPath 
        {
            get 
            {
                return _devOpsToolsImagesPath;
            }
        }

        public static string DevOpsGeneralErrorInformation
        {
            get { return _devOpsGeneralErrorInformation; }
        }

        public static string SupportEmailAddress
        {
            get { return _supportEmailAddress; }
        }

        public static bool IsWhiteLabeling() {
            if (!CompanyName.ToLower().Equals(defaultCompanyName.ToLower()) ||
                !PlatformName.ToLower().Equals(defaultPlatformName.ToLower()) ||
                !HelpBaseURL.ToLower().Equals(defaultHelpBaseURL.ToLower()) ||
                OutSystemsInternalFeatures != defaultOutSystemsInternalFeatures) {
                return true;
            } else {
                return false;
            }
        }

        public static string GetEffectiveBrand() {
            return Labeling.CompanyName + (Labeling.PlatformName == Labeling.CompanyName ? string.Empty : " " + Labeling.PlatformName);
        }
    }
}