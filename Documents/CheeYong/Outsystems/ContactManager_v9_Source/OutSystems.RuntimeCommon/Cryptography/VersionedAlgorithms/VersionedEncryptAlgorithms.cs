/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;

namespace OutSystems.RuntimeCommon.Cryptography.VersionedAlgorithms {
    public class VersionedEncryptAlgorithms: VersionedCryptographyAlgorithms<IVersionedEncryptAlgorithm> {
        public string Decrypt(string encryptedValueWithVersion) {
            return ProcessAlgorithmResult(encryptedValueWithVersion, (algorithm, encryptedValue) => algorithm.Decrypt(encryptedValue));
        }

        [Obsolete("This method should be ONLY used for settings upgrade scenarios.")]
        public string DecryptAllowingInsecureAlgorithms(string encryptedValueWithVersion) {
            return ProcessAlgorithmResult(encryptedValueWithVersion, (algorithm, encryptedValue) => algorithm.Decrypt(encryptedValue), /*checkSecureAlgorithm*/false);
        }

        public VersionedEncryptAlgorithms(params IVersionedEncryptAlgorithm[] algorithms): base(algorithms) {}
    }
}
