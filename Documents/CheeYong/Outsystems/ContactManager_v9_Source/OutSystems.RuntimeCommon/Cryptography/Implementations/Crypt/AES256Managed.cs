/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Security.Cryptography;

namespace OutSystems.RuntimeCommon.Cryptography.Implementations.Crypt {
    /// <summary>
    /// NOTE: This algorithm is FIPS compliant...
    /// </summary>
    internal class AES256Managed: CryptManaged {
        private const int BLOCK_SIZE = 128;
        
        protected override SymmetricAlgorithm CreateSymmetricAlgorithm() {
            return new AesCryptoServiceProvider {
                Mode = CipherMode.CBC,
                Padding = PaddingMode.PKCS7,
                KeySize = 256,
                BlockSize = BLOCK_SIZE,
            };
        }

        public override int InitializationVectorSizeInBytes { get { return BLOCK_SIZE / 8; } }
    }
}
