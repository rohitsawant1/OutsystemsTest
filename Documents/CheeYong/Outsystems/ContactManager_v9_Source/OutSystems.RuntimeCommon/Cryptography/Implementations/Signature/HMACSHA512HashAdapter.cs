/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Security.Cryptography;
using OutSystems.RuntimeCommon.Cryptography.Interfaces;

namespace OutSystems.RuntimeCommon.Cryptography.Implementations.Signature
{
    // NOTE: This algorithm is FIPS compliant...
    internal sealed class HMACSHA512HashAdapter : ISignGenerator
    {
        private sealed class FIPSHMACSHA512: HMAC {
            public FIPSHMACSHA512(byte[] key) {
                HashName = typeof (SHA512CryptoServiceProvider).FullName;
                HashSizeValue = 512;
                BlockSizeValue = 128;
                Key = key;
            }
        }

        public byte[] Sign(byte[] text, byte[] key) {
            using (var crypt = new FIPSHMACSHA512(key)) {
                return crypt.ComputeHash(text);
            }
        }
    }
}