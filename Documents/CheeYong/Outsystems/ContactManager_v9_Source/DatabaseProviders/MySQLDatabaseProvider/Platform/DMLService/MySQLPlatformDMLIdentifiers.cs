/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.HubEdition.DatabaseProvider.MySQL.DatabaseObjects;
using OutSystems.HubEdition.DatabaseProvider.MySQL.DMLService;
using OutSystems.HubEdition.DatabaseProvider.MySQL.IntrospectionService;
using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;
using OutSystems.HubEdition.Extensibility.Data.DMLService;
using OutSystems.HubEdition.Extensibility.Data.IntrospectionService;
using OutSystems.HubEdition.Extensibility.Data.Platform.DMLService;

namespace OutSystems.HubEdition.DatabaseProvider.MySQL.Platform.DMLService {
    internal class MySQLPlatformDMLIdentifiers: MySQLDMLIdentifiers, IPlatformDMLIdentifiers {
        internal MySQLPlatformDMLIdentifiers(IDMLService dmlService) : base(dmlService) {}

        public string EscapeAndQualifyIdentifier(IDatabaseInfo database, string objectName) {
            string schema = ((MySQLDatabaseInfo) database).Name;
            return EscapeIdentifier(schema) + "." + EscapeIdentifier(objectName);
        }

        public bool IsValidColumnName(string columnName) {
            return true;
        }

        public string UnescapeIdentifier(string objectName) {

            if (objectName == null) {
                throw new ArgumentNullException("objectName");
            }

            if (objectName.StartsWith("`", StringComparison.Ordinal) && objectName.EndsWith("`", StringComparison.Ordinal)) {
                return objectName.Substring(1, objectName.Length - 2);
            }

            return objectName;
        }
    }
}
