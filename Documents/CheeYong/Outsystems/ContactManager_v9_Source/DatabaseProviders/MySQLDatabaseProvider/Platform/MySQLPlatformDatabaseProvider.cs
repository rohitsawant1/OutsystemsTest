/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.HubEdition.DatabaseProvider.MySQL.ConfigurationService;
using OutSystems.HubEdition.DatabaseProvider.MySQL.Platform.Configuration;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;
using OutSystems.HubEdition.Extensibility.Data.Platform;
using OutSystems.HubEdition.Extensibility.Data.Platform.Configuration;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.DatabaseProvider.MySQL.Platform {

    public class MySQLPlatformDatabaseProvider : MySQLDatabaseProvider, IPlatformDatabaseProvider {

        public static readonly new IPlatformDatabaseProvider Instance = new MySQLPlatformDatabaseProvider();

        private readonly IPlatformProviderProperties properties;

        public MySQLPlatformDatabaseProvider() {
            properties = new MySQLPlatformProviderProperties(this);
        }

        public new IPlatformProviderProperties Properties {
            get { return properties; }
        }

        public IRuntimeDatabaseConfiguration CreateEmptyRuntimeDatabaseConfiguration() {
            return new MySQLRuntimeDatabaseConfiguration();
        }

        public IPlatformDatabaseServices GetPlatformDatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration) {
            return new MySQLPlatformDatabaseServices(databaseConfiguration);
        }
        public IPlatformConfigurationManager GetPlatformConfigurationManager(IPlatformDatabaseConfiguration uiConfiguration) {
            return new MySQLPlatformConfigurationManager(uiConfiguration);
        }

        public IPlatformDatabaseConfiguration CreateEmptyPlatformDatabaseConfiguration() {
            return new MySQLPlatformDatabaseConfiguration();
        }

        public ITwoUserDatabaseConfigurationManager GetBusinessConfigurationManager(ISettableTwoUserDatabaseConfiguration uiConfiguration, IPlatformDatabaseConfiguration systemDatabaseConfig) {
            return new MySQLBusinessDatabaseConfigurationManager(uiConfiguration);
        }

        public ISettableTwoUserDatabaseConfiguration CreateEmptyBusinessDatabaseConfiguration() {
            return new MySQLBusinessDatabaseConfiguration();
        }

        public ITwoUserDatabaseConfigurationManager GetLoggingConfigurationManager(ISettableTwoUserDatabaseConfiguration uiConfiguration, IPlatformDatabaseConfiguration systemDatabaseConfig)
        {
            return new MySQLLoggingDatabaseConfigurationManager(uiConfiguration);
        }
        public ISettableTwoUserDatabaseConfiguration CreateEmptyLoggingDatabaseConfiguration() {
            return new MySQLLoggingDatabaseConfiguration();
        }

        public ISessionConfigurationManager GetSessionConfigurationManager(ISessionDatabaseConfiguration uiConfiguration, IPlatformDatabaseConfiguration platformConfiguration) {
            return new MySQLSessionConfigurationManager(uiConfiguration);
        }

        public ISessionDatabaseConfiguration CreateEmptySessionDatabaseConfiguration() {
            return new MySQLSessionDatabaseConfiguration();
        }

    }
}