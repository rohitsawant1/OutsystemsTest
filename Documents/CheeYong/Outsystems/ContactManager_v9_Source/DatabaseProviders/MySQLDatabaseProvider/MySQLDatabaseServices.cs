/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.DatabaseProvider.MySQL.DatabaseObjects;
using OutSystems.HubEdition.DatabaseProvider.MySQL.DMLService;
using OutSystems.HubEdition.DatabaseProvider.MySQL.ExecutionService;
using OutSystems.HubEdition.DatabaseProvider.MySQL.IntrospectionService;
using OutSystems.HubEdition.DatabaseProvider.MySQL.TransactionService;
using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;
using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;
using OutSystems.HubEdition.Extensibility.Data.DMLService;
using OutSystems.HubEdition.Extensibility.Data.ExecutionService;
using OutSystems.HubEdition.Extensibility.Data.IntrospectionService;
using OutSystems.HubEdition.Extensibility.Data.TransactionService;
using OutSystems.RuntimeCommon.ObfuscationProperties;

namespace OutSystems.HubEdition.DatabaseProvider.MySQL {

    internal class MySQLDatabaseServices : IDatabaseServices {
        private readonly IRuntimeDatabaseConfiguration configuration;
        private readonly IDatabaseObjectFactory objectFactory;
        private readonly ITransactionService transactionService;
        private readonly IExecutionService executionService;
        private readonly IDMLService dmlService;
        private readonly IIntrospectionService introspectionService;

        public MySQLDatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration) {
            configuration = databaseConfiguration;
            objectFactory = new MySQLDatabaseObjectFactory(this);
            transactionService = new MySQLTransactionService(this);
            executionService = new MySQLExecutionService(this);
            dmlService = new MySQLDMLService(this);
            introspectionService = new MySQLIntrospectionService(this);
        }
        public virtual IDatabaseObjectFactory ObjectFactory { get { return objectFactory; } }
        public ITransactionService TransactionService { get { return transactionService; } }
        public virtual IExecutionService ExecutionService { get { return executionService; } }
        public virtual IDMLService DMLService { get { return dmlService; } }
        public virtual IIntrospectionService IntrospectionService { get { return introspectionService; } }
        public IRuntimeDatabaseConfiguration DatabaseConfiguration { get { return configuration; } }

    }
}
