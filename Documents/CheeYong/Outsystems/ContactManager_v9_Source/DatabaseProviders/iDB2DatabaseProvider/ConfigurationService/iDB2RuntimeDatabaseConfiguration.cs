/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Text.RegularExpressions;
using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;

namespace OutSystems.HubEdition.DatabaseProvider.iDB2.ConfigurationService {

    public class iDB2RuntimeDatabaseConfiguration : IRuntimeDatabaseConfiguration {

        private static readonly Regex _passwordRegex = new Regex(@"(PWD=\s*)([^ ;]+)(\s*;)", RegexOptions.CultureInvariant | RegexOptions.IgnoreCase);

        public IDatabaseProvider DatabaseProvider {
            get { return iDB2IntegrationDatabaseProvider.Instance; }
        }

        [ConfigurationParameter]
        public string Username {
            get;
            set;
        }

        [ConfigurationParameter]
        public string ConnectionString {
            get;
            set;
        }

        public string DatabaseIdentifier {
            get { return Schema; }
        }

        [ConfigurationParameter]
        public string Schema
        {
            get;
            set;
        }

        [ConfigurationParameter]
        public bool AutoCommit {
            get;
            set;
        }

        public string _onsConfig = "";
        [ConfigurationParameter]
        public string OnsConfig {
            get { return _onsConfig; }
            set { _onsConfig = value; }
        }

        public IIntegrationDatabaseConfiguration IntegrationDatabaseConfiguration {
            get {
                return new iDB2DatabaseConfiguration() {
                    ConnectionStringOverride = this.ConnectionString,
                    AutoCommit = this.AutoCommit,
                    Schema = this.Schema,
                };
            }
        }

        public override string ToString() {
            return _passwordRegex.Replace(ConnectionString, m => m.Groups[1].Value + "********" + m.Groups[3].Value);
        }
    }
}
