/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace OutSystems.HubEdition.DatabaseProvider.iDB2.Extensions
{
    static class DecimalExtensions
    {
        /// <summary>
        /// Strips decimal trailing zeros.
        /// Source: http://stackoverflow.com/questions/5067233/c-sharp-equivalent-of-bigdecimal-striptrailingzeros
        /// </summary>
        /// <param name="d">Decimal to be normalized.</param>
        /// <returns>Normalized decimal, without trailing zeros.</returns>
        public static decimal Normalize(this decimal d)
        {
            string[] tmp = d.ToString().Split('.');
            string val = tmp[0];
            string fraction = null;
            decimal result;
            if (tmp.Length > 1) fraction = tmp[1];
            if (fraction != null && Getleast(fraction) > 0)
            {
                decimal.TryParse(val.ToString() + "." + fraction.TrimEnd('0').ToString(), out result);
            }
            else
            {
                return decimal.Parse(val);
            }
            return result;
        }

        private static decimal Getleast(string str)
        {
            decimal res;
            decimal.TryParse(str.TrimEnd('0'), out res);// It returns 0 even if we pass null or empty string
            return res;
        }
    }
}
