/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.DatabaseProvider.Oracle.ConfigurationService;
using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;

namespace OutSystems.HubEdition.DatabaseProvider.Oracle.DatabaseObjects {
    public class DatabaseInfo : BaseDatabaseInfo {

        public DatabaseInfo(IDatabaseServices databaseServices, string schema) : this(databaseServices, schema, null) {}

        public DatabaseInfo(IDatabaseServices databaseServices, string schema, string databaseLink) : base(databaseServices) {
            Schema = schema;
            if (string.IsNullOrEmpty(Schema)) {
                DatabaseServices sqlServices = databaseServices as DatabaseServices;
                if (sqlServices != null) {
                    Schema = ((RuntimeDatabaseConfiguration) sqlServices.DatabaseConfiguration).Schema;
                }
            }
            DatabaseLink = databaseLink ?? string.Empty;
        }

        public override sealed string Identifier {
            get {
                return DatabaseServices.DMLService.Identifiers.EscapeIdentifier(Schema) +
                    (IsDatabaseLink ? "@" + DatabaseServices.DMLService.Identifiers.EscapeIdentifier(DatabaseLink) : "");
            }
        }

        public string Schema { get; private set; }

        public string DatabaseLink { get; private set; }

        public bool IsDatabaseLink {
            get { return !string.IsNullOrEmpty(DatabaseLink); }
        }

        public override bool Equals(IDatabaseInfo other) {
            DatabaseInfo dbi = other as DatabaseInfo;
            return ReferenceEquals(this, other) || (dbi != null && Schema == dbi.Schema && IsDatabaseLink == dbi.IsDatabaseLink && DatabaseLink == dbi.DatabaseLink);
        }

        public override int GetHashCode() {
            return Schema.GetHashCode() ^ DatabaseLink.GetHashCode();
        }
    }
}
