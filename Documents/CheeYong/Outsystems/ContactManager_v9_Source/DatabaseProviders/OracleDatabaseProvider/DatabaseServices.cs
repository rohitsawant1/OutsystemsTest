/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.DatabaseProvider.Oracle.DatabaseObjects;
using OutSystems.HubEdition.DatabaseProvider.Oracle.IntrospectionService;
using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;
using OutSystems.HubEdition.Extensibility.Data.DMLService;
using OutSystems.HubEdition.Extensibility.Data.ExecutionService;
using OutSystems.HubEdition.Extensibility.Data.IntrospectionService;
using OutSystems.HubEdition.Extensibility.Data.TransactionService;
using OutSystems.RuntimeCommon.ObfuscationProperties;
using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;

namespace OutSystems.HubEdition.DatabaseProvider.Oracle {

    [DoNotObfuscateType]
    internal class DatabaseServices : IDatabaseServices {

        private readonly ITransactionService transactionService;
        private readonly IExecutionService executionService;
        private readonly IDMLService dmlService;
        private readonly IIntrospectionService introspectionService;
        private readonly IRuntimeDatabaseConfiguration configuration;
        private readonly IDatabaseObjectFactory objectFactory;
        public virtual IDatabaseObjectFactory ObjectFactory { get { return objectFactory; } }
        public ITransactionService TransactionService { get { return transactionService; } }
        public virtual IExecutionService ExecutionService { get { return executionService; } }
        public virtual IDMLService DMLService { get { return dmlService; } }
        public virtual IIntrospectionService IntrospectionService { get { return introspectionService; } }


        public DatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration) {
            configuration = databaseConfiguration;
            objectFactory = new DatabaseObjectFactory(this);
            transactionService = new TransactionService.TransactionService(this);
            executionService = new ExecutionService.ExecutionService(this);
            dmlService = new DMLService.DMLService(this);
            introspectionService = new IntrospectionService.IntrospectionService(this);
        }

        public IRuntimeDatabaseConfiguration DatabaseConfiguration {
            get { return configuration; }
        }
    }
}
