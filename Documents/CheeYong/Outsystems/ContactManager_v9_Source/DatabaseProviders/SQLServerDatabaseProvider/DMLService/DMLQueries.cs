/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Collections.Generic;
using OutSystems.HubEdition.Extensibility.Data.DMLService;
using OutSystems.HubEdition.Extensibility.Data.DMLService.DMLPlaceholders;

namespace OutSystems.HubEdition.DatabaseProvider.SqlServer.DMLService {
    public class DMLQueries : BaseDMLQueries {
        
        internal DMLQueries(IDMLService dmlService) : base(dmlService) { }

        public override IDictionary<StatementPlaceholder, string> SQLPlaceholderValuesForCountQuery() {
            IDictionary<StatementPlaceholder, string> placeholders = new Dictionary<StatementPlaceholder, string>();
            placeholders.Add(StatementPlaceholder.BeforeStatement, "DECLARE @CountCursor CURSOR; SET @CountCursor = CURSOR STATIC READ_ONLY FOR ");
            placeholders.Add(StatementPlaceholder.AfterStatement, "; OPEN @CountCursor; SELECT @@CURSOR_ROWS; CLOSE @CountCursor; DEALLOCATE @CountCursor;");
            return placeholders;
        }

        public override IDictionary<SelectPlaceholder, string> SQLPlaceholderValuesForMaxRecords(string maxRecordsParam) {
            IDictionary<SelectPlaceholder, string> placeholders = new Dictionary<SelectPlaceholder, string>();
            placeholders.Add(SelectPlaceholder.AfterSelectKeyword, "TOP (" + maxRecordsParam + ")");
            return placeholders;
        }
        
    }
}
