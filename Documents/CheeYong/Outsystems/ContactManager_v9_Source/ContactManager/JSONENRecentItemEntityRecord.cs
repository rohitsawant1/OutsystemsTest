/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Linq;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Caching;

using System.Text;
using System.Data;
using System.Collections.Generic;
using Newtonsoft.Json;
using OutSystems.RESTService;
using OutSystems.RESTService.Behaviors;
using OutSystems.RESTService.Controllers;
using OutSystems.ObjectKeys;
using OutSystems.HubEdition.RuntimePlatform.NewRuntime;


namespace ssContactManager.RestRecords {

	public class JSONENRecentItemEntityRecord: AbstractRESTStructure<ENRecentItemEntityRecord> {
		[JsonProperty("Id")]
		public int? AttrId;

		[JsonProperty("TenantId")]
		public int? AttrTenantId;

		[JsonProperty("UserId")]
		public int? AttrUserId;

		[JsonProperty("Label")]
		public string AttrLabel;

		[JsonProperty("Tag")]
		public string AttrTag;

		[JsonProperty("URL")]
		public string AttrURL;

		[JsonProperty("Instant")]
		public String AttrInstant;

		public JSONENRecentItemEntityRecord() {}

		public JSONENRecentItemEntityRecord(ENRecentItemEntityRecord s, IBehaviorsConfiguration config) {
			if (config.DefaultValuesBehavior == DefaultValuesBehavior.DontSend) {
				AttrId = (int?) s.ssId;
				AttrTenantId = ConvertToRestWithoutDefaults(s.ssTenantId, 0);
				AttrUserId = ConvertToRestWithoutDefaults(s.ssUserId, 0);
				AttrLabel = ConvertToRestWithoutDefaults(s.ssLabel, "");
				AttrTag = ConvertToRestWithoutDefaults(s.ssTag, "");
				AttrURL = ConvertToRestWithoutDefaults(s.ssURL, "");
				AttrInstant = ConvertDateTimeToRestWithoutDefaults(s.ssInstant, new DateTime(1900, 1, 1, 0, 0, 0), config.DateTimeFormat);
			} else {
				AttrId = (int?) s.ssId;
				AttrTenantId = (int?) s.ssTenantId;
				AttrUserId = (int?) s.ssUserId;
				AttrLabel = s.ssLabel;
				AttrTag = s.ssTag;
				AttrURL = s.ssURL;
				AttrInstant = OutSystems.RESTService.Conversions.DateTimeToRestType(s.ssInstant, config.DateTimeFormat);
			}
		}

		public static Func<ssContactManager.RestRecords.JSONENRecentItemEntityRecord, ENRecentItemEntityRecord> ToStructureDelegate(IBehaviorsConfiguration config) {
			return (ssContactManager.RestRecords.JSONENRecentItemEntityRecord s) => ToStructure(s, config);
		}
		public static ENRecentItemEntityRecord ToStructure(ssContactManager.RestRecords.JSONENRecentItemEntityRecord obj, IBehaviorsConfiguration config) {
			ENRecentItemEntityRecord s = new ENRecentItemEntityRecord(null);
			if (obj != null) {
				s.ssId = obj.AttrId == null ? 0: obj.AttrId.Value;
				s.ssTenantId = obj.AttrTenantId == null ? 0: obj.AttrTenantId.Value;
				s.ssUserId = obj.AttrUserId == null ? 0: obj.AttrUserId.Value;
				s.ssLabel = obj.AttrLabel == null ? "": obj.AttrLabel;
				s.ssTag = obj.AttrTag == null ? "": obj.AttrTag;
				s.ssURL = obj.AttrURL == null ? "": obj.AttrURL;
				s.ssInstant = obj.AttrInstant == null ? new DateTime(1900, 1, 1, 0, 0, 0): OutSystems.RESTService.Conversions.TextToDateTime(obj.AttrInstant, config.DateTimeFormat);
			}
			return s;
		}

		public static Func<ENRecentItemEntityRecord, ssContactManager.RestRecords.JSONENRecentItemEntityRecord> FromStructureDelegate(IBehaviorsConfiguration config) {
			return (ENRecentItemEntityRecord s) => FromStructure(s, config);
		}
		public static ssContactManager.RestRecords.JSONENRecentItemEntityRecord FromStructure(ENRecentItemEntityRecord s, IBehaviorsConfiguration config) {
			return new ssContactManager.RestRecords.JSONENRecentItemEntityRecord(s, config);
		}

	}



}