/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Linq;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Caching;

using System.Text;
using System.Data;
using System.Collections.Generic;
using Newtonsoft.Json;
using OutSystems.RESTService;
using OutSystems.RESTService.Behaviors;
using OutSystems.RESTService.Controllers;
using OutSystems.ObjectKeys;
using OutSystems.HubEdition.RuntimePlatform.NewRuntime;


namespace ssContactManager.RestRecords {

	public class JSONENApplicationEntityRecord: AbstractRESTStructure<ENApplicationEntityRecord> {
		[JsonProperty("Id")]
		public int? AttrId;

		[JsonProperty("Name")]
		public string AttrName;

		[JsonProperty("Description")]
		public string AttrDescription;

		[JsonProperty("Entry_eSpace_Id")]
		public int? AttrEntry_eSpace_Id;

		[JsonProperty("BackOffice_eSpace_Id")]
		public int? AttrBackOffice_eSpace_Id;

		[JsonProperty("DefaultThemeIsMobile")]
		public bool? AttrDefaultThemeIsMobile;

		[JsonProperty("Key")]
		public string AttrKey;

		[JsonProperty("Is_Active")]
		public bool? AttrIs_Active;

		[JsonProperty("Disabled")]
		public bool? AttrDisabled;

		[JsonProperty("CreatedBy")]
		public int? AttrCreatedBy;

		[JsonProperty("ApplicationKind")]
		public string AttrApplicationKind;

		[JsonProperty("TemplateKey")]
		public string AttrTemplateKey;

		[JsonProperty("PrimaryColor")]
		public string AttrPrimaryColor;

		[JsonProperty("NativeHash")]
		public string AttrNativeHash;

		public JSONENApplicationEntityRecord() {}

		public JSONENApplicationEntityRecord(ENApplicationEntityRecord s, IBehaviorsConfiguration config) {
			if (config.DefaultValuesBehavior == DefaultValuesBehavior.DontSend) {
				AttrId = (int?) s.ssId;
				AttrName = ConvertToRestWithoutDefaults(s.ssName, "");
				AttrDescription = ConvertToRestWithoutDefaults(s.ssDescription, "");
				AttrEntry_eSpace_Id = ConvertToRestWithoutDefaults(s.ssEntry_eSpace_Id, 0);
				AttrBackOffice_eSpace_Id = ConvertToRestWithoutDefaults(s.ssBackOffice_eSpace_Id, 0);
				AttrDefaultThemeIsMobile = ConvertToRestWithoutDefaults(s.ssDefaultThemeIsMobile, false);
				AttrKey = ConvertToRestWithoutDefaults(s.ssKey, "");
				AttrIs_Active = ConvertToRestWithoutDefaults(s.ssIs_Active, false);
				AttrDisabled = ConvertToRestWithoutDefaults(s.ssDisabled, false);
				AttrCreatedBy = ConvertToRestWithoutDefaults(s.ssCreatedBy, 0);
				AttrApplicationKind = s.ssApplicationKind;
				AttrTemplateKey = ConvertToRestWithoutDefaults(s.ssTemplateKey, "");
				AttrPrimaryColor = ConvertToRestWithoutDefaults(s.ssPrimaryColor, "");
				AttrNativeHash = ConvertToRestWithoutDefaults(s.ssNativeHash, "");
			} else {
				AttrId = (int?) s.ssId;
				AttrName = s.ssName;
				AttrDescription = s.ssDescription;
				AttrEntry_eSpace_Id = (int?) s.ssEntry_eSpace_Id;
				AttrBackOffice_eSpace_Id = (int?) s.ssBackOffice_eSpace_Id;
				AttrDefaultThemeIsMobile = (bool?) s.ssDefaultThemeIsMobile;
				AttrKey = s.ssKey;
				AttrIs_Active = (bool?) s.ssIs_Active;
				AttrDisabled = (bool?) s.ssDisabled;
				AttrCreatedBy = (int?) s.ssCreatedBy;
				AttrApplicationKind = s.ssApplicationKind;
				AttrTemplateKey = s.ssTemplateKey;
				AttrPrimaryColor = s.ssPrimaryColor;
				AttrNativeHash = s.ssNativeHash;
			}
		}

		public static Func<ssContactManager.RestRecords.JSONENApplicationEntityRecord, ENApplicationEntityRecord> ToStructureDelegate(IBehaviorsConfiguration config) {
			return (ssContactManager.RestRecords.JSONENApplicationEntityRecord s) => ToStructure(s, config);
		}
		public static ENApplicationEntityRecord ToStructure(ssContactManager.RestRecords.JSONENApplicationEntityRecord obj, IBehaviorsConfiguration config) {
			ENApplicationEntityRecord s = new ENApplicationEntityRecord(null);
			if (obj != null) {
				s.ssId = obj.AttrId == null ? 0: obj.AttrId.Value;
				s.ssName = obj.AttrName == null ? "": obj.AttrName;
				s.ssDescription = obj.AttrDescription == null ? "": obj.AttrDescription;
				s.ssEntry_eSpace_Id = obj.AttrEntry_eSpace_Id == null ? 0: obj.AttrEntry_eSpace_Id.Value;
				s.ssBackOffice_eSpace_Id = obj.AttrBackOffice_eSpace_Id == null ? 0: obj.AttrBackOffice_eSpace_Id.Value;
				s.ssDefaultThemeIsMobile = obj.AttrDefaultThemeIsMobile == null ? false: obj.AttrDefaultThemeIsMobile.Value;
				s.ssKey = obj.AttrKey == null ? "": obj.AttrKey;
				s.ssIs_Active = obj.AttrIs_Active == null ? false: obj.AttrIs_Active.Value;
				s.ssDisabled = obj.AttrDisabled == null ? false: obj.AttrDisabled.Value;
				s.ssCreatedBy = obj.AttrCreatedBy == null ? 0: obj.AttrCreatedBy.Value;
				s.ssApplicationKind = obj.AttrApplicationKind == null ? "": obj.AttrApplicationKind;
				s.ssTemplateKey = obj.AttrTemplateKey == null ? "": obj.AttrTemplateKey;
				s.ssPrimaryColor = obj.AttrPrimaryColor == null ? "": obj.AttrPrimaryColor;
				s.ssNativeHash = obj.AttrNativeHash == null ? "": obj.AttrNativeHash;
			}
			return s;
		}

		public static Func<ENApplicationEntityRecord, ssContactManager.RestRecords.JSONENApplicationEntityRecord> FromStructureDelegate(IBehaviorsConfiguration config) {
			return (ENApplicationEntityRecord s) => FromStructure(s, config);
		}
		public static ssContactManager.RestRecords.JSONENApplicationEntityRecord FromStructure(ENApplicationEntityRecord s, IBehaviorsConfiguration config) {
			return new ssContactManager.RestRecords.JSONENApplicationEntityRecord(s, config);
		}

	}



}