/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.NewRuntime;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Caching;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssContactManager {

	public partial class Actions {
		public class lcvList_SortColumn_GetOrderBy: VarsBag {
			public string inParamTableRecordId;
			public string inParamDefaultOrder;
			public lcvList_SortColumn_GetOrderBy(string inParamTableRecordId, string inParamDefaultOrder) {
				this.inParamTableRecordId = inParamTableRecordId;
				this.inParamDefaultOrder = inParamDefaultOrder;
			}
		}
		public class lcoList_SortColumn_GetOrderBy: VarsBag {
			public string outParamOrderBy = "";

			public lcoList_SortColumn_GetOrderBy() {
			}
		}
		/// <summary>
		/// Action <code>ActionList_SortColumn_GetOrderBy</code> that represents the Service Studio user action
		///  <code>List_SortColumn_GetOrderBy</code> <p> Description: Retrieves the order by string currently i
		/// n use by a TableRecords widget (if any).</p>
		/// </summary>
		public static void ActionList_SortColumn_GetOrderBy(HeContext heContext, string inParamTableRecordId, string inParamDefaultOrder, out string outParamOrderBy) {
			lcoList_SortColumn_GetOrderBy result = new lcoList_SortColumn_GetOrderBy();
			lcvList_SortColumn_GetOrderBy localVars = new lcvList_SortColumn_GetOrderBy(inParamTableRecordId, inParamDefaultOrder);
			if (heContext != null && heContext.RequestTracer != null) {
				heContext.RequestTracer.RegisterInternalCall("f61iSknah0qFYhoTpK3zMw", "List_SortColumn_GetOrderBy", "X0RMeX3yYU+0eg2nFEDfaA", "ContactManager");
			}
			try {
				// Session.SortColumn_OrderBy
				// OrderBy = Private_HashGet(SortColumn_OrderBy, GetPageName() + ":" + TableRecordId)
				result.outParamOrderBy = Functions.ActionPrivate_HashGet(heContext, ((string) Global.App.OsContext.Session["ContactManager.SortColumn_OrderBy"]), ((Functions.rssextensionhttprequesthandler_ActionGetPageName(heContext) + ":") +localVars.inParamTableRecordId));
				// Exists?
				if ((!((result.outParamOrderBy!= "")))) {
					// Empty Default?
					if ((!((localVars.inParamDefaultOrder== "")))) {
						// Default
						// OrderBy = DefaultOrder
						result.outParamOrderBy = localVars.inParamDefaultOrder;
					}

				}

			} // try

			finally {
				outParamOrderBy = result.outParamOrderBy;
			}
		}

		public static class FuncActionList_SortColumn_GetOrderBy {



		}


	}

}