/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Linq;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Caching;

using System.Text;
using System.Data;
using System.Collections.Generic;
using Newtonsoft.Json;
using OutSystems.RESTService;
using OutSystems.RESTService.Behaviors;
using OutSystems.RESTService.Controllers;
using OutSystems.ObjectKeys;
using OutSystems.HubEdition.RuntimePlatform.NewRuntime;


namespace ssContactManager.RestRecords {

	public class JSONSTFeedback_MessageStructure: AbstractRESTStructure<STFeedback_MessageStructure> {
		[JsonProperty("MessageText")]
		public string AttrMessageText;

		[JsonProperty("MessageType")]
		public int? AttrMessageType;

		public JSONSTFeedback_MessageStructure() {}

		public JSONSTFeedback_MessageStructure(STFeedback_MessageStructure s, IBehaviorsConfiguration config) {
			if (config.DefaultValuesBehavior == DefaultValuesBehavior.DontSend) {
				AttrMessageText = s.ssMessageText;
				AttrMessageType = (int?) s.ssMessageType;
			} else {
				AttrMessageText = s.ssMessageText;
				AttrMessageType = (int?) s.ssMessageType;
			}
		}

		public static Func<ssContactManager.RestRecords.JSONSTFeedback_MessageStructure, STFeedback_MessageStructure> ToStructureDelegate(IBehaviorsConfiguration config) {
			return (ssContactManager.RestRecords.JSONSTFeedback_MessageStructure s) => ToStructure(s, config);
		}
		public static STFeedback_MessageStructure ToStructure(ssContactManager.RestRecords.JSONSTFeedback_MessageStructure obj, IBehaviorsConfiguration config) {
			STFeedback_MessageStructure s = new STFeedback_MessageStructure(null);
			if (obj != null) {
				s.ssMessageText = obj.AttrMessageText == null ? "": obj.AttrMessageText;
				s.ssMessageType = obj.AttrMessageType == null ? 0: obj.AttrMessageType.Value;
			}
			return s;
		}

		public static Func<STFeedback_MessageStructure, ssContactManager.RestRecords.JSONSTFeedback_MessageStructure> FromStructureDelegate(IBehaviorsConfiguration config) {
			return (STFeedback_MessageStructure s) => FromStructure(s, config);
		}
		public static ssContactManager.RestRecords.JSONSTFeedback_MessageStructure FromStructure(STFeedback_MessageStructure s, IBehaviorsConfiguration config) {
			return new ssContactManager.RestRecords.JSONSTFeedback_MessageStructure(s, config);
		}

	}



}