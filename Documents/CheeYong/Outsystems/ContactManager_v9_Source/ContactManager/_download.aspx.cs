/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Caching;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.RuntimeCommon.Caching;
using OutSystems.Internal.Db;
using System.Collections.Generic;

namespace ssContactManager {
	public class HandleDownload : System.Web.UI.Page {
		static HandleDownload() {
		}

		private void Page_Load(object sender, System.EventArgs e) {
			HttpContext current = HttpContext.Current;
			HttpRequest request = current.Request;
			HttpResponse response = current.Response;
            string parameters = request.PathInfo.Substring(1);
            string dwldhash = parameters.Split('/')[0];
            string filename = parameters.Split('/')[1];

            string mimeType, dummydisposition, dummyfilename;
            DateTime timestamp;
            byte[] buffer;
            bool foundFile = RuntimePlatformUtils.GetTemporaryAndroidDownload(dwldhash, out mimeType, out timestamp, out buffer, out dummyfilename, out dummydisposition);

            // all dates are UTC dates
			if (!foundFile || timestamp < DateTime.UtcNow ) {
                // Note: if seeing strange 404 requests, consider logging more information here
				response.Clear();
				response.Status = "404 Not Found";
				response.StatusCode = 404;
				response.StatusDescription = "Not Found";
				response.Write("Bad Request");
				response.End();
			}

			response.Clear();
			response.Status = "200 OK";
			response.StatusCode = 200;
			response.StatusDescription = "OK";
			response.ContentType = mimeType;
			response.AppendHeader("Cache-Control", "private");
			if (filename != String.Empty) {
				response.AppendHeader("Content-Disposition", "attachment; filename="+RuntimePlatformUtils.EscapeFilenameForDownload(filename));
			}
			
			if (buffer.Length > 0) {
				response.BinaryWrite(buffer);
			}
			
			response.End();
		}
		
		#region Web Form Designer generated code
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		
		protected override object LoadPageStateFromPersistenceMedium() {
			return null;
		}

		private void InitializeComponent() {    
			this.Load += new System.EventHandler(this.Page_Load);
		}
		#endregion
	}
}