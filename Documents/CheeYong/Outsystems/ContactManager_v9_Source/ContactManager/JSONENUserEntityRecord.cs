/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Linq;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Caching;

using System.Text;
using System.Data;
using System.Collections.Generic;
using Newtonsoft.Json;
using OutSystems.RESTService;
using OutSystems.RESTService.Behaviors;
using OutSystems.RESTService.Controllers;
using OutSystems.ObjectKeys;
using OutSystems.HubEdition.RuntimePlatform.NewRuntime;


namespace ssContactManager.RestRecords {

	public class JSONENUserEntityRecord: AbstractRESTStructure<ENUserEntityRecord> {
		[JsonProperty("Id")]
		public int? AttrId;

		[JsonProperty("Name")]
		public string AttrName;

		[JsonProperty("Username")]
		public string AttrUsername;

		[JsonProperty("Password")]
		public string AttrPassword;

		[JsonProperty("Email")]
		public string AttrEmail;

		[JsonProperty("MobilePhone")]
		public string AttrMobilePhone;

		[JsonProperty("External_Id")]
		public string AttrExternal_Id;

		[JsonProperty("Creation_Date")]
		public String AttrCreation_Date;

		[JsonProperty("Last_Login")]
		public String AttrLast_Login;

		[JsonProperty("Is_Active")]
		public bool? AttrIs_Active;

		public JSONENUserEntityRecord() {}

		public JSONENUserEntityRecord(ENUserEntityRecord s, IBehaviorsConfiguration config) {
			if (config.DefaultValuesBehavior == DefaultValuesBehavior.DontSend) {
				AttrId = (int?) s.ssId;
				AttrName = ConvertToRestWithoutDefaults(s.ssName, "");
				AttrUsername = ConvertToRestWithoutDefaults(s.ssUsername, "");
				AttrPassword = ConvertToRestWithoutDefaults(s.ssPassword, "");
				AttrEmail = ConvertToRestWithoutDefaults(s.ssEmail, "");
				AttrMobilePhone = ConvertToRestWithoutDefaults(s.ssMobilePhone, "");
				AttrExternal_Id = ConvertToRestWithoutDefaults(s.ssExternal_Id, "");
				AttrCreation_Date = OutSystems.RESTService.Conversions.DateTimeToRestType(s.ssCreation_Date, config.DateTimeFormat);
				AttrLast_Login = ConvertDateTimeToRestWithoutDefaults(s.ssLast_Login, new DateTime(1900, 1, 1, 0, 0, 0), config.DateTimeFormat);
				AttrIs_Active = (bool?) s.ssIs_Active;
			} else {
				AttrId = (int?) s.ssId;
				AttrName = s.ssName;
				AttrUsername = s.ssUsername;
				AttrPassword = s.ssPassword;
				AttrEmail = s.ssEmail;
				AttrMobilePhone = s.ssMobilePhone;
				AttrExternal_Id = s.ssExternal_Id;
				AttrCreation_Date = OutSystems.RESTService.Conversions.DateTimeToRestType(s.ssCreation_Date, config.DateTimeFormat);
				AttrLast_Login = OutSystems.RESTService.Conversions.DateTimeToRestType(s.ssLast_Login, config.DateTimeFormat);
				AttrIs_Active = (bool?) s.ssIs_Active;
			}
		}

		public static Func<ssContactManager.RestRecords.JSONENUserEntityRecord, ENUserEntityRecord> ToStructureDelegate(IBehaviorsConfiguration config) {
			return (ssContactManager.RestRecords.JSONENUserEntityRecord s) => ToStructure(s, config);
		}
		public static ENUserEntityRecord ToStructure(ssContactManager.RestRecords.JSONENUserEntityRecord obj, IBehaviorsConfiguration config) {
			ENUserEntityRecord s = new ENUserEntityRecord(null);
			if (obj != null) {
				s.ssId = obj.AttrId == null ? 0: obj.AttrId.Value;
				s.ssName = obj.AttrName == null ? "": obj.AttrName;
				s.ssUsername = obj.AttrUsername == null ? "": obj.AttrUsername;
				s.ssPassword = obj.AttrPassword == null ? "": obj.AttrPassword;
				s.ssEmail = obj.AttrEmail == null ? "": obj.AttrEmail;
				s.ssMobilePhone = obj.AttrMobilePhone == null ? "": obj.AttrMobilePhone;
				s.ssExternal_Id = obj.AttrExternal_Id == null ? "": obj.AttrExternal_Id;
				s.ssCreation_Date = obj.AttrCreation_Date == null ? new DateTime(1900, 1, 1, 0, 0, 0): OutSystems.RESTService.Conversions.TextToDateTime(obj.AttrCreation_Date, config.DateTimeFormat);
				s.ssLast_Login = obj.AttrLast_Login == null ? new DateTime(1900, 1, 1, 0, 0, 0): OutSystems.RESTService.Conversions.TextToDateTime(obj.AttrLast_Login, config.DateTimeFormat);
				s.ssIs_Active = obj.AttrIs_Active == null ? true: obj.AttrIs_Active.Value;
			}
			return s;
		}

		public static Func<ENUserEntityRecord, ssContactManager.RestRecords.JSONENUserEntityRecord> FromStructureDelegate(IBehaviorsConfiguration config) {
			return (ENUserEntityRecord s) => FromStructure(s, config);
		}
		public static ssContactManager.RestRecords.JSONENUserEntityRecord FromStructure(ENUserEntityRecord s, IBehaviorsConfiguration config) {
			return new ssContactManager.RestRecords.JSONENUserEntityRecord(s, config);
		}

	}



}