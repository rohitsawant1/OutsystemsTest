/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;

namespace OutSystems.Logging.LogDefinition {
    [Serializable]
    public class MobileRequestLogDefinition : AbstractLogDefinition {
    
        public string Id;
        public DateTime Instant;
        public int EspaceId;
        public int TenantId;
        public string Screen;
        public string Endpoint;
        public string Source;
        public int Duration;
        public string ExecutedBy;
        public string ErrorId;
        public string RequestKey;
        public string LoginId;
        public int UserId;
        public string EspaceName;
        public string ApplicationName;
        public ObjectKey ApplicationKey;
        public string Username;

        public const int MAX_ID_SIZE = 50;
        public const int MAX_SCREEN_SIZE = 1000;
        public const int MAX_ENDPOINT_SIZE = 1000;
        public const int MAX_SOURCE_SIZE = 1000;
        public const int MAX_ERROR_ID_SIZE = 50;
        public const int MAX_LOGINID_SIZE = 60;

        public MobileRequestLogDefinition() {
            Id = GenerateLogId();
        }

        public MobileRequestLogDefinition(DateTime instant, int espaceId, int tenantId, string screen, string endpoint,
            string source, int duration, string executedBy, string errorId, string requestKey, string loginId, int userId,
            string eSpaceName, string applicationName, ObjectKey applicationKey, string username) :
            this(GenerateLogId(), instant, espaceId, tenantId, screen, endpoint, source, duration, executedBy, errorId, requestKey, loginId, userId,
                eSpaceName, applicationName, applicationKey, username) {
        }

        public MobileRequestLogDefinition(MobileRequestLogDefinition obj) :
            this(obj.Instant, obj.EspaceId, obj.TenantId, obj.Screen, obj.Endpoint, obj.Source,
                    obj.Duration, obj.ExecutedBy, obj.ErrorId, obj.RequestKey, obj.LoginId, obj.UserId,
                    obj.EspaceName, obj.ApplicationName, obj.ApplicationKey, obj.Username) {
        }

        public MobileRequestLogDefinition(string id, DateTime instant, int espaceId, int tenantId, string screen, string endpoint,
            string source, int duration, string executedBy, string errorId, string requestKey, string loginId, int userId,
            string eSpaceName, string applicationName, ObjectKey applicationKey, string username) {
            Id = id?.Left(MAX_ID_SIZE) ?? string.Empty;
            Instant = instant;
            EspaceId = espaceId;
            TenantId = tenantId;
            Screen = screen?.Left(MAX_SCREEN_SIZE) ?? string.Empty;
            Endpoint = endpoint?.Left(MAX_ENDPOINT_SIZE) ?? string.Empty;
            Source = source?.Left(MAX_SOURCE_SIZE) ?? string.Empty;
            Duration = duration;
            ExecutedBy = executedBy;
            ErrorId = errorId?.Left(MAX_ERROR_ID_SIZE) ?? string.Empty;
            LoginId = loginId?.Left(MAX_LOGINID_SIZE) ?? string.Empty;
            UserId = userId;
            RequestKey = requestKey;
            EspaceName = eSpaceName;
            ApplicationName = applicationName;
            ApplicationKey = applicationKey;
            Username = username;
        }

        public override object Clone() {
            return new MobileRequestLogDefinition(this);
        }

        public void Write(string id, DateTime instant, int espaceId, int tenantId, string screen, string endpoint, string source,
            int duration, string executedBy, string errorId, string loginId, int userId, string requestKey,
            string eSpaceName, string applicationName, ObjectKey applicationKey, string username) {
            Id = id;
            Instant = instant;
            EspaceId = espaceId;
            TenantId = tenantId;
            Screen = screen?.Left(MAX_SCREEN_SIZE) ?? string.Empty;
            Endpoint = endpoint?.Left(MAX_ENDPOINT_SIZE) ?? string.Empty;
            Source = source?.Left(MAX_SOURCE_SIZE) ?? string.Empty;
            Duration = duration;
            ExecutedBy = executedBy;
            ErrorId = errorId;
            LoginId = loginId?.Left(MAX_LOGINID_SIZE) ?? string.Empty;
            UserId = userId;
            RequestKey = requestKey;
            EspaceName = eSpaceName;
            ApplicationName = applicationName;
            ApplicationKey = applicationKey;
            Username = username;

            Write();
        }
        
        public void Write() {
            RuntimeLogger.Log(this);
        }

        public static string StaticWrite(DateTime instant, int espaceId, int tenantId, string screen, string endpoint, string source,
            int duration, string executedBy, string errorId, string loginId, int userId, string requestKey,
            string eSpaceName, string applicationName, ObjectKey applicationKey, string username) {

            MobileRequestLogDefinition log = new MobileRequestLogDefinition(instant, espaceId, tenantId, screen, endpoint, 
                source, duration, executedBy, errorId, requestKey, loginId, userId,
                eSpaceName, applicationName, applicationKey, username);
            log.Write();

            return log.Id;
        }

        private static string GenerateLogId() {
            return Guid.NewGuid().ToString();
        }

    }
}
