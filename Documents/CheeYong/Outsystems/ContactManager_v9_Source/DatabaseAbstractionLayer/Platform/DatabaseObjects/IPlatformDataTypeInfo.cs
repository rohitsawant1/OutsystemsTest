/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;

namespace OutSystems.HubEdition.Extensibility.Data.Platform.DatabaseObjects {

    /// <summary>
    /// Contains information about a data type.
    /// </summary>
    public interface IPlatformDataTypeInfo : IDataTypeInfo {

        /// <summary>
        /// Returns true if both objects represent an equivalent database data type.
        /// Note that this "equivalent database type" refers to the underlying database type;
        /// For TEXT and DECIMAL types, "equivalent database type" ALSO refers to the length(precision) of the field.
        /// This method is used, among other things, to determine if an ALTER COLUMN statement should be issued
        /// 
        /// Example: TEXT(200) is not equivalent to TEXT(400)
        ///          TEXT(500) is not equivalent to TEXT(x, x>2000) - change of underlying (DB) DataType occurs here
        ///          TEXT(x, x>2000) is equivalent to TEXT(y, y>2000) - both lengths above MAX_VARCHAR_LENGTH cause underlying (DB) DataType to be the same
        /// </summary>
        /// <param name="other">Other datatype object to compare with</param>
        /// <returns>true if the current object is equivalent to the other parameter; otherwise, false.</returns>
        bool IsEquivalent(IDataTypeInfo other);
    }
}
