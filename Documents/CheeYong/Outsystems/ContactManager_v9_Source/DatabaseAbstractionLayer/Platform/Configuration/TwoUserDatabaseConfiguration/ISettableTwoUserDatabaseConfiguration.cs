/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Net;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;

namespace OutSystems.HubEdition.Extensibility.Data.Platform.Configuration {

    public interface ISettableTwoUserDatabaseConfiguration : ITwoUserDatabaseConfiguration {

        /// <summary>
        /// Indicates the current state of the Configuration, if the property is true, then IntegratedAuthenticationMode is set
        /// </summary>
        /// <value>
        /// The authentication type of the configuration.
        /// </value>
        new AuthenticationType AuthenticationMode {
            get;
            set;
        }

        /// <summary>
        /// Gets the object that compacts all the needed configuration parameters to be used in runtime for a specific user type.
        /// </summary>
        /// <returns>The configuration that allows services or applications to access the database as the specified user.</returns>
        IRuntimeDatabaseConfiguration RuntimeDatabaseConfiguration(UserType user);

        #region Admin

        /// <summary>
        /// This property returns the credentials for the admin user.
        /// </summary>
        /// <value>
        /// The admin authentication credentials.
        /// </value>
        new NetworkCredential AdminAuthenticationCredential {
            get;
            set;
        }

        #endregion

        #region Runtime

        /// <summary>
        /// This property returns the credentials for the runtime user.
        /// </summary>
        /// <value>
        /// The runtime authentication credentials.
        /// </value>
        new NetworkCredential RuntimeAuthenticationCredential {
            get;
            set;
        }

        #endregion

        void Set(IPlatformDatabaseConfiguration conf);

        bool HasEmptyConfiguration();
    }
}
