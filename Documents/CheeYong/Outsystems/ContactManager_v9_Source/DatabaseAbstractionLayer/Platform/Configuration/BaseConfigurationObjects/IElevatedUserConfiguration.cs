/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Net;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;

namespace OutSystems.HubEdition.Extensibility.Data.Platform.Configuration {

    /// <summary>
    /// This interface identifies a database configurations, i.e., an implementation of <see cref="IPlatformDatabaseConfiguration"/> or <see cref="ISessionDatabaseConfiguration"/>,
    /// that handle operations that require elevated privileges user.
    /// The credentials for this user will be set whenever the execution of operations that require elevated user is necessary.
    /// </summary>
    public interface IElevatedUserConfiguration {

        /// <summary>
        /// This property returns the credentials for the elevated user.
        /// Changes to this property must be reflected by the RuntimeDatabaseConfigurations
        /// returned by the method <see cref="ElevatedRuntimeDatabaseConfiguration" />.
        /// </summary>
        /// <value>
        /// The elevated user credentials.
        /// </value>
        NetworkCredential ElevatedAuthenticationCredential { get; set; }

        /// <summary>
        /// Gets the object that compacts all the needed configuration parameters to be used in runtime.
        /// </summary>
        /// <returns>The configuration that allows accessing the database as an elevated user.</returns>
        IRuntimeDatabaseConfiguration ElevatedRuntimeDatabaseConfiguration();

        /// <summary>
        /// The authentication mode used by the elevated user.
        /// </summary>
        /// <value>
        /// The elevated user authentication mode.
        /// </value>
        AuthenticationType ElevatedUserAuthenticationMode { get; set; }
    }
}