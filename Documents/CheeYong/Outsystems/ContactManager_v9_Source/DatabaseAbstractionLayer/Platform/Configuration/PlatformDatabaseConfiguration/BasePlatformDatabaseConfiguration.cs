/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Net;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;

namespace OutSystems.HubEdition.Extensibility.Data.Platform.Configuration {
    public abstract class BasePlatformDatabaseConfiguration : AbstractTwoUserDatabaseConfiguration, IPlatformDatabaseConfiguration {

        public abstract IRuntimeDatabaseConfiguration RuntimeDatabaseConfiguration(Source source, UserType userType);

        private string logUser = null;

        #region Log

        [UserDefinedConfigurationParameter(Label = "User", IsMandatory = true, Order = 1, Region = ParameterRegion.UserLogSpecific, Prompt = "Log username")]
        public virtual string LogUser {
            get {
                return logUser ?? "OSLOG";
            }
            set {
                logUser = value;
            }
        }

        [UserDefinedConfigurationParameter(Label = "Password", IsPassword = true, IsMandatory = true, Order = 2, Region = ParameterRegion.UserLogSpecific, Prompt = "Log password", Encrypt=true)]
        public virtual string LogPassword { get; set; }

        public NetworkCredential LogAuthenticationCredential {
            get {
                return new NetworkCredential(LogUser, LogPassword);
            }
        }

        #endregion

        #region Database Advanced Settings

        [UserDefinedConfigurationParameter(Label = "OutSystems Services", Order = 2, Region = ParameterRegion.Advanced, Example = "e.g.: Max Pool Size= 100; Connection Timeout = 15;", Prompt = "Services TNS name")]
        public virtual string ServicesAdvancedSettings { get; set; }

        #endregion
    }
}
