/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;
using OutSystems.RuntimeCommon;
using System.Collections.Generic;
using System;

namespace OutSystems.HubEdition.Extensibility.Data.IntrospectionService {
    public abstract class BaseIntrospectionService : IIntrospectionService {

        public virtual int QueryTimeout { get; set; }

        public virtual IDatabaseServices DatabaseServices { get; private set; }

        protected BaseIntrospectionService(IDatabaseServices databaseServices) {
            DatabaseServices = databaseServices;
        }
        
        public abstract IEnumerable<IDatabaseInfo> ListDatabases();

        public abstract IEnumerable<ITableSourceInfo> ListTableSources(IDatabaseInfo database, IsTableSourceToIgnore isTableSourceToIgnore);

        public abstract IEnumerable<ITableSourceForeignKeyInfo> GetTableSourceForeignKeys(ITableSourceInfo tableSource);

        public abstract IEnumerable<ITableSourceColumnInfo> GetTableSourceColumns(ITableSourceInfo tableSource);
        
        protected void LogException(Exception e, string additionalMessage) {
            try {
                OSTrace.Error((e != null ? e.Message : "") + Environment.NewLine + additionalMessage +
                    (e != null && e.StackTrace != null ? e.StackTrace : ""));
            } catch {
            }
        }
    }
}
