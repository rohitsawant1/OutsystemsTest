/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Data;
using OutSystems.HubEdition.Extensibility.Data.TransactionService;
using OutSystems.RuntimeCommon.ObfuscationProperties;

namespace OutSystems.Internal.Db {
    /// <summary>
    /// Extended implementation of a <c>ManagedTransaction</c> that have a <c>TransactionManager</c> associated 
    /// and that is responsible to perform the operations about the transaction.
    /// The difference is related to the dispose of this object.
    /// </summary>
    [DoNotObfuscateType]
    [DoNotSealTypeAttribute]
    public class PrivateManagedTransaction : ManagedTransaction {
        // TODO JMR REFACTOR: Review public/internal
        public PrivateManagedTransaction(ITransactionManager manager, IDbTransaction transaction, IExecutionBehaviours dbBehaviours) : base(manager, transaction, dbBehaviours) { }

        public override void Dispose() {
            Rollback();
            DriverTransaction.Dispose();
        }
    }
}
