/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

namespace OutSystems.HubEdition.Extensibility.Data.DMLService {

    /// <summary>
    /// Base implementation of a contract for generating default values for simple queries.
    /// </summary>
    public abstract class BaseDMLDefaultValues : IDMLDefaultValues {

        protected BaseDMLDefaultValues(IDMLService dmlService) {
            DMLService = dmlService;
        }

        /// <summary>
        /// This property represents the associated DML service.
        /// </summary>
        public IDMLService DMLService { get; private set; }

        /// <summary>
        /// Gets a DML expression that returns the NULL value.
        /// This implementation always returns NULL.
        /// </summary>
        /// <returns>DML expression</returns>
        public virtual string Null {
            get { return "NULL"; }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Text elements.
        /// This implementation always returns ''.
        /// </summary>
        /// <returns>DML expression of type Text</returns>
        public virtual string Text {
            get { return "''"; }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Boolean elements.
        /// This implementation always returns zero.
        /// </summary>
        /// <returns>DML expression of type Boolean</returns>
        public virtual string Boolean {
            get { return "0"; }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Integer elements.
        /// This implementation always returns zero.
        /// </summary>
        /// <returns>DML expression of type Integer</returns>
        public virtual string Integer {
            get { return "0"; }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Long elements.
        /// This implementation always returns zero.
        /// </summary>
        /// <returns>DML expression of type Long</returns>
        public virtual string LongInteger {
            get { return "0"; }
        }


        /// <summary>
        /// Gets a DML expression that returns the default value for Decimal elements.
        /// This implementation always returns zero.
        /// </summary>
        /// <returns>DML expression of type Decimal</returns>
        public virtual string Decimal {
            get { return "0"; }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Date elements.
        /// This implementation uses the <seealso cref="IDMLFunctions.TextToDate"/> with the value '1900-01-01'
        /// </summary>
        /// <returns>DML expression of type Date</returns>
        public virtual string Date {
            get { return DMLService.Functions.TextToDate("'1900-01-01'", "yyyy-MM-dd"); }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for Time elements.
        /// This implementation uses the <seealso cref="IDMLFunctions.TextToTime"/> with the value '00:00:00'
        /// </summary>
        /// <returns>DML expression of type Time</returns>
        public virtual string Time {
            get { return DMLService.Functions.TextToTime("'00:00:00'"); }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for DateTime elements.
        /// This implementation uses the <seealso cref="IDMLFunctions.TextToDateTime"/> with the value '1900-01-01 00:00:00'
        /// </summary>
        /// <returns>DML expression of type DateTime</returns>
        public virtual string DateTime {
            get { return DMLService.Functions.TextToDateTime("'1900-01-01 00:00:00'", "yyyy-MM-dd"); }
        }

        /// <summary>
        /// Gets a DML expression that returns the default value for BinaryData elements.
        /// This implementation always returns NULL.
        /// </summary>
        /// <returns>DML expression of type BinaryData</returns>
        public virtual string BinaryData {
            get { return "NULL"; }
        }
    }
}
