/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using OutSystems.Internal.SAP;
using SAP.Middleware.Connector;

namespace OutSystems.RuntimePublic.SAP {


    /// <summary>
    /// Provides access to the SAP request object used for consuming a SAP Remote Function.
    /// </summary>
    public class SAPRequest {

        private SAPInternalContext sapInternalContext;
        private SAPRequest(SAPInternalContext sapInternalContext) {
            this.sapInternalContext = sapInternalContext;
        }

        /// <summary>
        /// Returns the invoke object used by a SAP API.
        /// This method should only be used inside the OnBeforeConnection, OnBeforeInvoke or OnAfterInvoke callbacks of a SAP API.
        /// </summary>
        /// <returns> The SAP API invoke, or null when used outside the OnBeforeConnection, OnBeforeInvoke or OnAfterInvoke callbacks.</returns>
        public static SAPRequest GetCurrent() {
            var sapInternalContext = SAPInternalContext.GetCurrent();
            if (sapInternalContext != null) {
                return new SAPRequest(sapInternalContext);
            } else {
                return null; // not inside of an OnBeforeConnection, OnBeforeInvoke or OnAfterInvoke callback.
            }
        }

        /// <summary>
        /// Returns the current IRfcFunction being called.
        /// This method should only be used inside the OnBeforeInvoke or OnAfterInvoke callbacks of a SAP API.
        /// </summary>
        /// <returns>The RfcFunction to be used.</returns>
        public IRfcFunction GetIRfcFunction() {
            return sapInternalContext.GetIRfcFunction();
        }


    }

}
