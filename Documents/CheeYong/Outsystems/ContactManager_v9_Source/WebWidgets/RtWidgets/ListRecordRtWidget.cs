/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.WebWidgets {

    [Serializable()]
    public class ListRecordRtWidget : RtWidget, IListRecordRtWidget {
        public ListRecordRtWidget(IWebListRecordWidget control) : base() {
            base.Control = control;
        }

        protected new IWebListRecordWidget Control {
            get { return (IWebListRecordWidget) base.Control; }
        }

        public int StartIndex {
            get { return Control.StartIndex; }
        }

        public int LineCount {
            get { return Control.LineCount; }
        }

        public IOSList List {
            get { return Control.DataSource; }
            set { Control.DataSource = value; }
        }

        public override void InnerToXml(XmlElement widgetElem, int detailLevel) {
            VarValue.AppendAttribute(widgetElem, "LineCount", Control.LineCountLastEvaluation, TypeKind.Integer);
            VarValue.AppendAttribute(widgetElem, "StartIndex", Control.StartIndexLastEvaluation, TypeKind.Integer);
            if (Control.DataSource != null) {
                Control.DataSource.ToXml(this, widgetElem, "List", detailLevel - 1);
            }
        }

        public override void InnerEvaluateField(VarValue variable, string field) {
            if (field == "linecount") {
                variable.Value = Control.LineCountLastEvaluation;
            } else if (field == "startindex") {
                variable.Value = Control.StartIndexLastEvaluation;
            } else if (field == "list") {
                variable.Value = Control.DataSource;
            }
        }
    }
}
