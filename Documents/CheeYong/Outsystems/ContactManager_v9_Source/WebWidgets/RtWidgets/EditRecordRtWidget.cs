/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Reflection;
using System.Web.UI;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.WebWidgets {
    public class EditRecordRtWidget : RecordRtWidget {
        private string validMethodName;
        private MethodInfo validMethod;

		private bool Valid() {
            if (validMethod == null) {
                validMethod = Page.GetType().GetMethod(validMethodName);
            }

            if (validMethod != null) {
				return Convert.ToBoolean(validMethod.Invoke(Page, new Object[] {}));
            }

            return false;
		}

        public EditRecordRtWidget(string validMethodName) {
            this.validMethodName = validMethodName;
        }

        public override void InnerToXml(XmlElement widgetElem, int detailLevel) {
            base.InnerToXml(widgetElem, detailLevel);
            VarValue.AppendAttribute(widgetElem, "Valid", Valid(), TypeKind.Boolean);
		}

        public override void InnerEvaluateField(VarValue variable, string field) {
            base.InnerEvaluateField(variable, field);
            if (field == "valid") {
				variable.Value = Valid();
		}
	}
}
}
