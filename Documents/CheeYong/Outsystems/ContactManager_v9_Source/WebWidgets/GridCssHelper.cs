/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using OutSystems.RuntimeCommon;

namespace OutSystems.HubEdition.WebWidgets {
    internal interface IGridWidget {
        string GridCssClasses { get; set; }
    }

    internal static class GridCssHelper {
        public static string GetClassesAttribute(this IGridWidget w) {
            var controlClasses = string.Empty;

            var webControl = w as WebControl;
            if (webControl != null) {
                controlClasses = webControl.CssClass;
            }
            var htmlControl = w as HtmlControl;
            if (htmlControl != null) {
                controlClasses = htmlControl.Attributes["class"];
            }

            return String.IsNullOrEmpty(w.GridCssClasses)? controlClasses: JoinClasses(controlClasses, w.GridCssClasses);
        }

        public static void AddGridClassesAttribute(this IGridWidget w) {
            string classes = w.GetClassesAttribute();

            if (String.IsNullOrEmpty(classes)) {
                return; // nothing to do, bail out
            }

            var webControl = w as WebControl;
            var htmlControl = w as HtmlControl;
                        
            if ((webControl != null) && (webControl.CssClass != classes)) {
                webControl.CssClass = classes;
            } else if ((htmlControl != null) && (htmlControl.Attributes["class"] != classes)) {
                htmlControl.Attributes["class"] = classes;
            }
        }

        public static string JoinClasses(string c1, string c2) {
            if (c1.IsEmpty()) {
                c1 = c2;
            } else {
                if (!c1.EndsWith(" ")) { 
                    c1 += " "; 
                }
                c1 += c2;
            }
            return c1;
        }
    }
}
