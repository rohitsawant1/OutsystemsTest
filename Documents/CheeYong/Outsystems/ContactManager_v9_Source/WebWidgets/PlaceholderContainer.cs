/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Reflection;
using System.Web.UI;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;

namespace OutSystems.HubEdition.WebWidgets {
    [ParseChildren(false)]
    public sealed class PlaceholderContainer : Container, INamingContainer {

        private LocalState[] previousState;

        protected override void OnBeforeDatabind() {
            base.OnBeforeDatabind();
            OSUserControl ownerBlock = (OSUserControl)Utils.GetOwnerOfControl(this.Parent);

            previousState = ownerBlock.PopDebuggerState();
        }

        protected override void OnAfterDataBind() {
            base.OnAfterDataBind();

            if (previousState != null) {
                foreach (LocalState state in previousState) {
                    Debugger.Push(state);
                }
            }
        }

    }
}