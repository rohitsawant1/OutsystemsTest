/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Text.RegularExpressions;
using System.Web;
using OutSystems.RuntimeCommon;
using OutSystems.RuntimeCommon.Cryptography.Insecure;

namespace OutSystems.HubEdition.WebWidgets {
    public sealed class DownloadNodeCache {

        private bool hasDownloadNode = false;
        private string contentType;
        private string fileName;
        private bool saveOnDisk;
        private byte[] data;

        public void CheckForCachedDownloadNode(HttpResponse Response) {
            if (!hasDownloadNode) {
                return;
            }
            Response.ClearContent();
            string md5Hashnode35;
            md5Hashnode35 = MD5HashHelper.Hash(data);
            Response.ContentType = contentType;
            Response.AppendHeader("ETag", "\"" + md5Hashnode35 + "\"");
            Response.AppendHeader("Content-MD5", md5Hashnode35);
            Response.AppendHeader("Accept-Ranges", "none");
            if (saveOnDisk) {
                Response.AppendHeader("Content-Disposition", "attachment; filename=" + Regex.Replace(fileName, "^.*/|^.*\\\\|[^a-zA-Z0-9\\._\\-]", "", RegexOptions.Singleline));
            } else {
                Response.AppendHeader("Content-Disposition", "inline; filename=" + Regex.Replace(fileName, "^.*/|^.*\\\\|[^a-zA-Z0-9\\._\\-]", "", RegexOptions.Singleline));
            }
            if (data.Length > 0) {
                Response.BinaryWrite(data);
            }

            Response.End();
        }

        public void CacheDownloadNode(string contentType, string fileName, bool saveOnDisk, byte[] data) {
            hasDownloadNode = true;
            this.contentType = contentType;
            this.fileName = fileName;
            this.saveOnDisk = saveOnDisk;
            this.data = data;
        }
    }
}